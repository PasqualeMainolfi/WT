/* autogenerated by Processing revision 1293 on 2023-10-23 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class javaTerrain extends PApplet {


int w = 2400;
int h = 2400;
int cols;
int rows;
int factor = 20;
float[][] terrain;

float f = 0;

public void setup() {
    /* size commented out by preprocessor */;
    cols = w / factor;
    rows = h / factor;
    terrain = new float[rows][cols];
    
}

public void draw() {

    f += 0.01f;

    float yoff = f;
    for(int y = 0; y < rows; y++) {
        float xoff = 0.1f;
        for(int x = 0; x < cols; x++) {
            terrain[y][x] = map(noise(xoff, yoff), 0, 1, -150, 150);
            xoff += 0.1f;
        }
        yoff += 0.1f;
    }

    background(0);
    stroke(255);
    noFill();

    translate(width / 2, height / 2);
    rotateX(PI / 3);
    translate(-w / 2, -h / 2);

    for(int y = 0; y < rows - 1; y++) {
        beginShape(TRIANGLE_STRIP);
        for(int x = 0; x < cols; x++) {
            vertex(x * factor, y * factor, terrain[y][x]);
            vertex(x * factor, (y + 1) * factor, terrain[y + 1][x]);
            // rect(x * factor, y * factor, factor, factor);
        }
        endShape();
    }
    

    
}


  public void settings() { size(800, 800, P3D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "javaTerrain" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
